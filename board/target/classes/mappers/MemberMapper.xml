<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mappers.Member">

<!-- 사용자 등록 -->
<update id="signup" parameterType="com.board.domain.MemberVO">
   update tbl_sfmember set userpassword = #{userpassword}, username = #{username}, authority_code = '02', 
   	telno = #{telno}, email = #{email}, regdate = #{regdate}, lastlogindate = #{lastlogindate}, pwmodidate = #{pwmodidate} where userid = #{userid}
</update> 

<!-- 사용자 프로파일 사진 등록 -->
<update id="registerProfileImg" parameterType="com.board.domain.MemberVO" >
	insert into tbl_sfmember (userid, org_img, stored_img, img_size) values 
		(#{userid}, #{org_img}, #{stored_img}, #{img_size})
</update>

<!-- 사용자 프로파일 사진 변경 -->
<update id="modifyProfileImg" parameterType="com.board.domain.MemberVO">
   update tbl_sfmember set org_img = #{org_img}, stored_img = #{stored_img}, img_size = #{img_size} 
    	where userid = #{userid}
</update>

<!-- 마지막 로그인 날짜 변경 -->
<update id="modifyLoginInfo" parameterType="com.board.domain.MemberVO">
	update tbl_sfmember set lastlogindate = #{lastlogindate} where userid = #{userid}
</update>

<!-- 사용자 정보 조회 -->
<select id="viewMemberInfo" parameterType="com.board.domain.MemberVO" resultType="com.board.domain.MemberVO">
	select userid, username, userpassword, authority_code, telno, email, date_format(regdate,"%Y-%m-%d %T") as regDate, 
		date_format(lastlogindate, "%Y-%m-%d %T") as lastlogindate, date_format(pwmodidate, "%Y-%d-%m %T") as pwmodidate, stored_img 
 		from tbl_sfmember where userid = #{userid}   
</select>

<!-- 사용자 정보 수정 -->
<update id="modifyMemberInfo" parameterType="com.board.domain.MemberVO" >
 update tbl_sfmember set telno = #{telno}, email = #{email} where userid = #{userid}
</update>

<!-- 사용자 패스워드 수정  -->
<update id="modifyPassword" parameterType="com.board.domain.MemberVO" >
 update tbl_sfmember set userpassword = #{userpassword}, pwmodidate = #{pwmodidate} where userid = #{userid}
</update>

<!-- 회원탈퇴 시 사용자 개인정보, 등록한 게시물 정보 전체 삭제 -->
<delete id="deleteMemberInfo" parameterType="com.board.domain.MemberVO">
  delete a,b from tbl_m1board a join tbl_sfmember b on a.userid = b.userid where b.userid = #{userid}
</delete>

<!-- 회원 탈퇴시 사용자가 등록한 댓글 전체 삭제 -->
<delete id="deleteAllReply" parameterType="com.board.domain.MemberVO">
	delete from tbl_m1reply where userid = #{userid}
</delete>

<!-- 로그인 -->
<select id="login" parameterType="hashMap" resultType="com.board.domain.MemberVO">
    select userid, username, userpassword, authority_code from tbl_sfmember where userid = #{userid}
</select>

<!-- 패스워드 변경 기간 확인 -->
<select id="checkPasswordModification" parameterType="com.board.domain.MemberVO" resultType="hashMap">
	SELECT DATEDIFF(NOW(),pwModiDate) AS DiffDate, DATEDIFF(pwWaitDate,NOW()) AS WaitDate 
		from tbl_sfmember where userid = #{userid};
</select>

<!-- 패스워드 30일 이후 변경 -->
<update id="modifyPasswordAfter30" parameterType="com.board.domain.MemberVO">
	UPDATE tbl_sfmember SET pwwaitdate = (SELECT DATE_ADD(NOW(),INTERVAL 30 DAY) from DUAL) WHERE userid = #{userid}
</update>

<!-- 패스워드 찾기 -->
<select id="searchPassword" parameterType="com.board.domain.MemberVO" resultType="int">
	select count(*) from tbl_sfmember where userid = #{userid} and username = #{username}
</select>

<!-- 아이디 찾기 -->
<select id="searchID" parameterType="com.board.domain.MemberVO" resultType="string">
	select userid from tbl_sfmember where username=#{username} and telno=#{telno}
</select>

<!-- 아이디 중복 체크 -->
<select id="idCheck" parameterType="com.board.domain.MemberVO" resultType="int">
    select count(*) from tbl_sfmember where userid = #{userid}
</select>


</mapper>